library(TDAkit)
# Personal Test
library(TDA)
X <- TDA::circleUnif(30)
Y <- TDA::circleUnif(50)
# Personal Test
library(TDA)
X <- TDA::circleUnif(30)
Y <- TDA::circleUnif(50)
diagx = ripsDiag(X, maxdimension=0, maxscale=Inf)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
diagy = ripsDiag(Y, maxdimension=1, maxscale=Inf)$diagram
diagx
diagy
dlist = list()
dlist = list()
dlist[[1]] = d2landscape(diagx, dimension = 0, k=5, tseq = seq(from=0,to=11,length.out=100))
diagx
diagram = diagx
dat.dimension = round(as.vector(diagram[,1]))
dat.birth     = as.vector(diagram[,2])
dat.death     = as.vector(diagram[,3])
# dimension
dimension = round(dimension)
dimension = 0
idin = base::intersect((!is.infinite(dat.dimension)), which(dat.dimension==dimension))
idin
idin = base::intersect(which((!is.infinite(dat.dimension))), which(dat.dimension==dimension))
idin
library(TDAkit)
# personal test -----------------------------------------------------------
library(TDA)
X <- TDA::circleUnif(30)
Y <- TDA::circleUnif(50)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
diagy = ripsDiag(Y, maxdimension=1, maxscale=Inf)$diagram
dlist = list()
dlist[[1]] = d2landscape(diagx, dimension = 0, k=5, tseq = seq(from=0,to=11,length.out=100))
dlist[[2]] = d2landscape(diagy, dimension = 0, k=8, tseq = seq(from=0,to=12,length.out=123))
output = landscape.wsum(dlist)
output
library(TDAkit)
# personal test -----------------------------------------------------------
library(TDA)
X <- TDA::circleUnif(30)
Y <- TDA::circleUnif(50)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
diagy = ripsDiag(Y, maxdimension=1, maxscale=Inf)$diagram
dlist = list()
dlist[[1]] = d2landscape(diagx, dimension = 0, k=5, tseq = seq(from=0,to=11,length.out=100))
dlist[[2]] = d2landscape(diagy, dimension = 0, k=8, tseq = seq(from=0,to=12,length.out=123))
output = landscape.wsum(dlist)
library(TDAkit)
# personal test -----------------------------------------------------------
library(TDA)
X <- TDA::circleUnif(30)
Y <- TDA::circleUnif(50)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
diagy = ripsDiag(Y, maxdimension=1, maxscale=Inf)$diagram
dlist = list()
dlist[[1]] = d2landscape(diagx, dimension = 0, k=5, tseq = seq(from=0,to=11,length.out=100))
dlist[[2]] = d2landscape(diagy, dimension = 0, k=8, tseq = seq(from=0,to=12,length.out=123))
output = landscape.wsum(dlist)
library(TDAkit)
output = landscape.wsum(dlist)
output
plot(output$tseq, output$lambda)
plot(output$tseq, output$lambda[,1])
plot(output$tseq, output$lambda[,2])
plot(output$tseq, output$lambda[,1])
plot(output$tseq, output$lambda[,4])
plot(output$tseq, output$lambda[,5])
plot(output$lambda[,1])
diagx
plot(output$lambda[,1])
plot(output$lambda[,2])
plot(output$lambda[,3])
plot(output$lambda[,4])
plot(output$lambda[,5])
plot(output$lambda[,6])
plot(output$lambda[,7])
output$lambda
output$lambda[,1]
dlist[[1]] = d2landscape(diagx, dimension = 0, k=5, tseq = seq(from=0,to=30,length.out=100))
dlist[[2]] = d2landscape(diagy, dimension = 0, k=8, tseq = seq(from=0,to=30,length.out=123))
output = landscape.wsum(dlist)
output$lambda[,1]
plot(output$lambda[,1])
diax
diagx
diagy
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = diagx
}
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=0, k=3, tseq=seq(from=0,to=9+i,length.out=50))
}
output = landscape.wsum(dlist)
plot(output$lambda[,1])
plot(output$lambda[,2])
plot(output$lambda[,3])
plot(output$lambda[,4])
plot(output$lambda[,3])
plot(output$lambda)
matplot(output$lambda)
rm(list=ls())
library(TDAkit)
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=3, tseq=seq(from=0,to=9+i,length.out=50))
}
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=1, tseq=seq(from=0,to=9+i,length.out=50))
}
output = landscape.wsum(dlist)
output$lambda
plot(output$lambda)
library(TDAkit)
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=1, tseq=seq(from=0,to=9+i,length.out=50), inf.replace = FALSE)
}
output = landscape.wsum(dlist)
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, tseq=seq(from=0,to=9+i,length.out=50), inf.replace = FALSE)
}
output = landscape.wsum(dlist)
output$lambda
plot(output$lambda[,1])
plot(output$lambda[,2])
plot(output$lambda[,3])
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=0, k=0, tseq=seq(from=0,to=9+i,length.out=50), inf.replace = FALSE)
}
output = landscape.wsum(dlist)
plot(output$lambda[,1])
plot(output$lambda[,2])
plot(output$lambda[,3])
plot(output$lambda[,4])
plot(output$lambda[,5])
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=0, k=0, tseq=seq(from=0,to=9+i,length.out=50), inf.replace = TRUE)
}
output = landscape.wsum(dlist)
plot(output$lambda[,1])
plot(output$lambda[,2])
plot(output$lambda[,3])
library(TDAkit)
help("d2landscape")
library(TDA)
X <- TDA::circleUnif(30)
Y <- TDA::circleUnif(50)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
diagy = ripsDiag(Y, maxdimension=1, maxscale=Inf)$diagram
dlist = list()
dlist[[1]] = d2landscape(diagx, dimension = 0, k=5, tseq = seq(from=0,to=4,length.out=100))
dlist[[2]] = d2landscape(diagy, dimension = 0, k=8, tseq = seq(from=0,to=4,length.out=123))
output = landscape.wsum(dlist)
dlist = list()
for (i in 1:10){
X <- TDA::circleUnif(40)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=0, k=0, tseq=seq(from=0,to=9+i,length.out=50), inf.replace = TRUE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
library(TDAkit)
# Personal Test
library(TDA)
X <- TDA::circleUnif(30)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
mytseq  = seq(from=0, to=11, length.out=100)
x1 = TDA::landscape(diagx, dimension=0, KK=1:2, tseq=mytseq)
x2 = TDAkit::d2landscape(diagx, dimension=0, k=2, tseq = mytseq)
x2$lambda
diagx
b = 0
d = 0.63
tseq = seq(from=0,to=5,length.out=10)
tseq = seq(from=0,to=5,length.out=100)
ntime=100
yy = base::pmax(base::pmin(tseq-b, d-tseq), rep(0,ntime))
plot(yy)
library(TDAkit)
library(TDAkit)
# Personal Test
library(TDA)
X <- TDA::circleUnif(30)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
mytseq  = seq(from=0, to=11, length.out=100)
x1 = TDA::landscape(diagx, dimension=0, KK=1:2, tseq=mytseq)
x2 = TDAkit::d2landscape(diagx, dimension=0, k=2, tseq = mytseq)
x1
x2
x1
library(TDA)
X <- TDA::circleUnif(30)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
mytseq  = seq(from=0, to=11, length.out=100)
x1 = TDA::landscape(diagx, dimension=1, KK=1:2, tseq=mytseq)
x2 = TDAkit::d2landscape(diagx, dimension=1, k=2, tseq = mytseq)
plot(X[,1], X[,2])
library(TDA)
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
plot(X[,1], X[,2])
library(TDA)
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
diagx = ripsDiag(X, maxdimension=1, maxscale=Inf)$diagram
mytseq  = seq(from=0, to=11, length.out=100)
x1 = TDA::landscape(diagx, dimension=1, KK=1:2, tseq=mytseq)
x2 = TDAkit::d2landscape(diagx, dimension=1, k=2, tseq = mytseq)
plot(x1[,1])
dim(x1)
plot(x1[,1], "l")
plot(mytseq, x1[,1],"b")
plot(mytseq, x1[,1],"l")
lines(mytseq,x1[,2],"l",col="red")
par(mfrow=c(1,2))
plot(mytseq, x1[,1],"l")
lines(mytseq,x1[,2],"l",col="red")
plot(mytseq, x2$lambda[,1], "l")
plot(mytseq, x2$lambda[,2], "l")
x2$lambda
graphics.off()
par(mfrow=c(1,2))
plot(mytseq, x1[,1],"l")
lines(mytseq,x1[,2],"l",col="red")
plot(mytseq, x2$lambda[,1], "l")
lines(mytseq, x2$lambda[,2], col="red")
library(TDAkit)
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, tseq=seq(from=0,to=9+i,length.out=50), inf.replace = TRUE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, tseq=seq(from=0,to=4+i,length.out=50), inf.replace = TRUE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, tseq=seq(from=0,to=4+i,length.out=50), inf.replace = FALSE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=0, k=0, tseq=seq(from=0,to=4+i,length.out=50), inf.replace = FALSE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, inf.replace = FALSE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, inf.replace = FALSE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, inf.replace = FALSE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
dlist = list()
for (i in 1:10){
x1 = TDA::circleUnif(30)
x2 = TDA::circleUnif(30)*0.5
x2[,1] = x2[,1] + rep(1,nrow(x2))
X <- rbind(x1,x2)
X <- X + matrix(rnorm(nrow(X)*ncol(X),sd=0.1), ncol=ncol(X))
diagx = ripsDiag(X, maxdimension = 1, maxscale = Inf)$diagram
dlist[[i]] = d2landscape(diagx, dimension=1, k=0, inf.replace = FALSE)
}
output = landscape.wsum(dlist)
plot(output$tseq, output$lambda[,1], "l")
lines(output$tseq, output$lambda[,2], col="red")
library(TDAkit)
library(TDAkit)
library(TDAkit)
landscape.norm(dlist[[1]])
landscape.norm(dlist[[1]], p=1)
landscape.norm(dlist[[1]], p=2)
dlist[[1]]
library(TDAkit)
dlist[[1]]
landscape.norm(dlist[[1]], p=2)
library(TDAkit)
library(TDAkit)
landscape.norm(dlist[[1]], p=2)
landscape.norm(dlist[[1]], p=2)
dlist[[1]]
landscape.norm(dlist[[1]], p=Inf)
landscape.norm(dlist[[1]], p=2)
landscape.norm(dlist[[1]], p=3)
landscape.norm(dlist[[1]], p=1)
library(TDAkit)
landscape.norm(dlist[[1]], p=1)
library(TDAkit)
landscape.norm(dlist[[1]], p=1)
landscape.norm(dlist[[1]], p=2)
landscape.norm(dlist[[1]], p=3)
landscape.norm(dlist[[1]], p=4)
landscape.norm(dlist[[1]], p=5)
help(apply)
library(TDAkit)
landscape.norm(dlist[[1]], p=1)
library(TDAkit)
landscape.norm(dlist[[1]], p=1)
dlist[[1]]
plot(dlist[[1]]$lambda[,1])
0^(1/2)
0^0
library(TDAkit)
landscape.norm(dlist[[1]], p=1)
landscape.norm(dlist[[1]], p=2)
landscape.norm(dlist[[1]], p=3)
landscape.norm(dlist[[1]], p=Inf)
x
as.matrix(rnorm(5))
library(TDAkit)
landscape.norm2(dlist, 1)
landscape.norm2(dlist, 2)
dlist
library(TDAkit)
landscape.norm2(dlist, 2)
landscape.norm2(dlist, 1)
landscape.norm2(dlist, 1, as.dist = TRUE)
diff12 = dlist[[1]]$lambda - dlist[[2]]$lambda
diff12
library(TDAkit)
landscape.norm2(dlist, 1)
landscape.norm2(dlist, Inf)
library(TDAkit)
