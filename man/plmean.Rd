% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/landscape_mean.R
\name{plmean}
\alias{plmean}
\title{Mean of Multiple Persistence Landscapes}
\usage{
plmean(dlist)
}
\arguments{
\item{dlist}{a length-\eqn{N} list of \code{'landscape'} objects from \code{\link{diag2landscape}}.}
}
\value{
a list object of \code{"landscape"} class containing\describe{
\item{lambda}{an \eqn{(\code{nseq} \times k)} landscape functions.}
\item{tseq}{a length-\code{nseq} vector of domain grid.}
\item{dimension}{dimension of features considered.}
}
}
\description{
Given \eqn{N} landscape functions \eqn{\Lambda_1 (t), \Lambda_2 (t), \ldots, \Lambda_N (t)} of same dimension, 
compute the weighted sum 
\deqn{\bar{\Lambda} (t) = \frac{1}{N} \sum_{n=1}^N \Lambda_n (t)}.
}
\examples{
# ---------------------------------------------------------------------------
#         Mean of 10 Persistence Landscapes from '2holes' data
# ---------------------------------------------------------------------------
## Generate 10 Diagrams with 'gen2holes()' function
list_rips = list()
for (i in 1:10){
  list_rips[[i]] = diagRips(gen2holes(n=100, sd=2)$data, maxdim=1)
}

## Compute Persistence Landscapes from Each Diagram with k=5 Functions
list_land = list()
for (i in 1:10){
  list_land[[i]] = diag2landscape(list_rips[[i]], dimension=0, k=5)
}

## Compute Weighted Sum of Landscapes
ldsum = plsum(list_land)

## Visualize
sam5  <- sort(sample(1:10, 5, replace=FALSE))
opar  <- par(no.readonly=TRUE)
par(mfrow=c(2,3), pty="s")
for (i in 1:5){
  tgt = list_land[[sam5[i]]]
  matplot(tgt$tseq, tgt$lambda[,1:5], type="l", lwd=3, main=paste("landscape no.",sam5[i]))
}
matplot(ldsum$tseq, ldsum$lambda[,1:5], type="l", lwd=3, main="weighted sum")
par(opar)

}
\references{
\insertRef{bubenik_persistence_2018}{TDAkit}
}
\concept{landscape}
